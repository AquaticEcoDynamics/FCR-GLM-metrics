mutate(month = lubridate::month(datetime)) %>%
filter(between(month, 4, 9)) %>%
mutate(year = lubridate::year(datetime)) %>%
group_by(year)
td_uncertainty_d2$datetime<- as.Date(td_uncertainty_d2$datetime, format="%Y-%m-%d")
combined_td <- merge(td_uncertainty, td_uncertainty_d2, all=TRUE)  %>%
mutate(col= 2)
combined_td$datetime <- as.Date(combined_td$datetime, forma="%Y-%m-%d")
#Pre calib
pre_temp<- read.csv('Pre_calibration/temp_uncertainty_pre_200.csv')
pre_temp <- pre_temp[,-1]
pre_temp$DateTime <- as.Date(pre_temp$DateTime, format="%Y-%m-%d")
pre_td <- pivot_wider(pre_temp, names_from=Depth, names_prefix='wtr_', values_from=temp)
pre_td <- pre_td[,-1]
pre_td <- pre_td %>%
rename(datetime = DateTime)
td_pre_uncertainty <- ts.thermo.depth(pre_td, Smin = 0.1, na.rm=TRUE, seasonal=FALSE) %>%
mutate(month = lubridate::month(datetime)) %>%
filter(between(month, 4, 9)) %>%
mutate(year = lubridate::year(datetime)) %>%
group_by(year) %>%
mutate(col= 1)
td_pre_uncertainty$datetime<- as.Date(td_pre_uncertainty$datetime, format="%Y-%m-%d")
#Combined td uncertainty plot
plot2 <-ggplot(td_pre_uncertainty, aes(datetime, thermo.depth, group=year), alpha=0.6)+
facet_wrap(~ year, nrow = 1, scales = "free_x")+
ggfan::geom_fan(intervals=intervals)+
scale_fill_gradient(name="Pre-calibration")+
ggnewscale::new_scale_fill()+
ggfan::geom_fan(data=combined_td, mapping=aes(datetime, thermo.depth, group=year), intervals=intervals, alpha=0.6)+
scale_fill_gradient(name="Post-calibration", low="red", high="pink")+
ylab("Thermocline depth (m)")+
xlab("Date")+
ylim(c(0, 10))+
ggplot2::theme_light() +
theme(
plot.title = ggplot2::element_text(face= "bold", size = 10),
axis.title.y = ggplot2::element_text(face="bold",size= 12),
axis.title.x = ggplot2::element_text(face="bold", size= 12, margin = margin(t = 5, r = 0, b = 0, l = 0)),
legend.text = ggplot2::element_text(size= 10),
legend.title = ggplot2::element_text(face="bold",size= 12),
axis.text = element_text(size=12),
strip.text = element_text(size = 12)
)
plot2
#MOM uncertainty
#Pre-calibration
oxy_pre <- read.csv("Pre_calibration/oxygen_uncertainty_pre_200.csv")
oxy_pre <- oxy_pre[,-1]
oxy_pre$DateTime <- as.Date(oxy_pre$DateTime, format="%Y-%m-%d")
mom_pre <- filter(oxy_pre, Depth==4 | Depth==1 | Depth==8)
mom_pre <- pivot_wider(mom_pre, names_from=Depth, names_prefix='depth_', values_from=OXY_oxy)
mom_pre$value <- mom_pre$depth_4 - ((mom_pre$depth_1 + mom_pre$depth_8)/2)
#Deepm1 w2
deepm1_exm<- read.csv('Deepm1_w2/oxygen_uncertainty_post.csv')
deepm1_exm <- deepm1_exm[,-1]
deepm1_exm$DateTime <- as.Date(deepm1_exm$DateTime, format="%Y-%m-%d")
deepm1_exm$column_label <- deepm1_exm$column_label + 200
deepm1_exm <- subset(deepm1_exm, column_label!=401)
mom_deepm1 <- filter(deepm1_exm, Depth==4 | Depth==1 | Depth==8)
mom_deepm1 <- pivot_wider(mom_deepm1, names_from=Depth, names_prefix='depth_', values_from=OXY_oxy)
mom_deepm1$value <- mom_deepm1$depth_4 - ((mom_deepm1$depth_1 + mom_deepm1$depth_8)/2)
#Deepm2 w2
deepm2_exm <-read.csv("Deepm2_w2/oxygen_uncertainty_post.csv")
deepm2_exm <- deepm2_exm[,-1]
deepm2_exm$DateTime <- as.Date(deepm2_exm$DateTime, format="%Y-%m-%d")
mom_deepm2 <- filter(deepm2_exm, Depth==4 | Depth==1 | Depth==8)
mom_deepm2 <- pivot_wider(mom_deepm2, names_from=Depth, names_prefix='depth_', values_from=OXY_oxy)
mom_deepm2$value <- mom_deepm2$depth_4 - ((mom_deepm2$depth_1 + mom_deepm2$depth_8)/2)
combined_mom<- merge(mom_deepm2, mom_deepm1, all=TRUE)
#MOM uncertainty plot
intervals = 1:19/20
plot1 <-ggplot(mom_pre, aes(DateTime,value))+
ggfan::geom_fan(intervals=intervals)+
scale_fill_gradient(name="Pre-calibration")+
ggnewscale::new_scale_fill()+
ggfan::geom_fan(data=combined_mom, mapping=aes(DateTime, value), intervals=intervals, alpha=0.6)+
scale_fill_gradient(name="Post-calibraion", low="red", high="pink")+
ylab("MOM")+
ylab(expression(bold(MOM~(mmol/m^{3}))))+
xlab("Date")+
ylim(c(-300, 200))+
ggtitle("")+
ggplot2::theme_light() +
theme(
plot.title = ggplot2::element_text(face= "bold", size = 10),
axis.title.y = ggplot2::element_text(face="bold",size= 12),
axis.title.x = ggplot2::element_text(face="bold", size= 12, margin = margin(t = 5, r = 0, b = 0, l = 0)),
legend.text = ggplot2::element_text(size= 10),
legend.title = ggplot2::element_text(face="bold",size= 12),
axis.text = element_text(size=12)
)
plot1
combined <- ggarrange(plot2, plot1, ncol=1, nrow=2, common.legend=TRUE)+
theme(legend.position='bottom')
combined
setwd("/Volumes/Users/Kamilla/FCR/PEST/PEST_final_runs/Github/Results/Uncertainty_analysis")
sim_folder <- getwd()
#Uncertainty (extra metrics w2 models)
#Temperature
intervals = 1:19/20
depths <- c(0.1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9.2)
#deep mixing 1 post calibration temp dataset
deepm1_exm<- read.csv('Deepm1_w2/temp_uncertainty_post.csv')
deepm1_exm <- deepm1_exm[,-1]
deepm1_exm$DateTime <- as.Date(deepm1_exm$DateTime, format="%Y-%m-%d")
deepm1_exm$column_label <- deepm1_exm$column_label + 200
deepm1_exm <- subset(deepm1_exm, column_label!=401)
#deep mixing 2 post calibration temp dataset
deepm2_exm <-read.csv("Deepm2_w2/temp_uncertainty_post.csv")
deepm2_exm <- deepm2_exm[,-1]
deepm2_exm$DateTime <- as.Date(deepm2_exm$DateTime, format="%Y-%m-%d")
#thermocline depth
#deepm1
deepm1_td <- pivot_wider(deepm1_exm, names_from=Depth, names_prefix='wtr_', values_from=temp)
deepm1_td <- deepm1_td[,-1]
deepm1_td <- deepm1_td %>%
rename(datetime = DateTime)
td_uncertainty <- ts.thermo.depth(deepm1_td, Smin = 0.1, na.rm=TRUE, seasonal=FALSE) %>%
mutate(month = lubridate::month(datetime)) %>%
filter(between(month, 4, 9)) %>%
mutate(year = lubridate::year(datetime)) %>%
group_by(year)
td_uncertainty$datetime<- as.Date(td_uncertainty$datetime, format="%Y-%m-%d")
#deepm2
deepm2_td <- pivot_wider(deepm2_exm, names_from=Depth, names_prefix='wtr_', values_from=temp)
deepm2_td <- deepm2_td[,-1]
deepm2_td <- deepm2_td %>%
rename(datetime = DateTime)
td_uncertainty_d2 <- ts.thermo.depth(deepm2_td, Smin = 0.1, na.rm=TRUE, seasonal=FALSE) %>%
mutate(month = lubridate::month(datetime)) %>%
filter(between(month, 4, 9)) %>%
mutate(year = lubridate::year(datetime)) %>%
group_by(year)
td_uncertainty_d2$datetime<- as.Date(td_uncertainty_d2$datetime, format="%Y-%m-%d")
combined_td <- merge(td_uncertainty, td_uncertainty_d2, all=TRUE)  %>%
mutate(col= 2)
combined_td$datetime <- as.Date(combined_td$datetime, forma="%Y-%m-%d")
#Pre calib
pre_temp<- read.csv('Pre_calibration/temp_uncertainty_pre_200.csv')
pre_temp <- pre_temp[,-1]
pre_temp$DateTime <- as.Date(pre_temp$DateTime, format="%Y-%m-%d")
pre_td <- pivot_wider(pre_temp, names_from=Depth, names_prefix='wtr_', values_from=temp)
pre_td <- pre_td[,-1]
pre_td <- pre_td %>%
rename(datetime = DateTime)
td_pre_uncertainty <- ts.thermo.depth(pre_td, Smin = 0.1, na.rm=TRUE, seasonal=FALSE) %>%
mutate(month = lubridate::month(datetime)) %>%
filter(between(month, 4, 9)) %>%
mutate(year = lubridate::year(datetime)) %>%
group_by(year) %>%
mutate(col= 1)
td_pre_uncertainty$datetime<- as.Date(td_pre_uncertainty$datetime, format="%Y-%m-%d")
#Combined td uncertainty plot
plot2 <-ggplot(td_pre_uncertainty, aes(datetime, thermo.depth, group=year), alpha=0.6)+
facet_wrap(~ year, nrow = 1, scales = "free_x")+
ggfan::geom_fan(intervals=intervals)+
scale_fill_gradient(name="Pre-calibration")+
ggnewscale::new_scale_fill()+
ggfan::geom_fan(data=combined_td, mapping=aes(datetime, thermo.depth, group=year), intervals=intervals, alpha=0.6)+
scale_fill_gradient(name="Post-calibration", low="red", high="pink")+
ylab("Thermocline depth (m)")+
xlab("Date")+
ylim(c(0, 10))+
ggplot2::theme_light() +
theme(
plot.title = ggplot2::element_text(face= "bold", size = 10),
axis.title.y = ggplot2::element_text(face="bold",size= 12),
axis.title.x = ggplot2::element_text(face="bold", size= 12, margin = margin(t = 5, r = 0, b = 0, l = 0)),
legend.text = ggplot2::element_text(size= 10),
legend.title = ggplot2::element_text(face="bold",size= 12),
axis.text = element_text(size=12),
strip.text = element_text(size = 12)
)
plot2
#MOM uncertainty
#Pre-calibration
oxy_pre <- read.csv("Pre_calibration/oxygen_uncertainty_pre_200.csv")
oxy_pre <- oxy_pre[,-1]
oxy_pre$DateTime <- as.Date(oxy_pre$DateTime, format="%Y-%m-%d")
mom_pre <- filter(oxy_pre, Depth==4 | Depth==1 | Depth==8)
mom_pre <- pivot_wider(mom_pre, names_from=Depth, names_prefix='depth_', values_from=OXY_oxy)
mom_pre$value <- mom_pre$depth_4 - ((mom_pre$depth_1 + mom_pre$depth_8)/2)
#Deepm1 w2
deepm1_exm<- read.csv('Deepm1_w2/oxygen_uncertainty_post.csv')
deepm1_exm <- deepm1_exm[,-1]
deepm1_exm$DateTime <- as.Date(deepm1_exm$DateTime, format="%Y-%m-%d")
deepm1_exm$column_label <- deepm1_exm$column_label + 200
deepm1_exm <- subset(deepm1_exm, column_label!=401)
mom_deepm1 <- filter(deepm1_exm, Depth==4 | Depth==1 | Depth==8)
mom_deepm1 <- pivot_wider(mom_deepm1, names_from=Depth, names_prefix='depth_', values_from=OXY_oxy)
mom_deepm1$value <- mom_deepm1$depth_4 - ((mom_deepm1$depth_1 + mom_deepm1$depth_8)/2)
#Deepm2 w2
deepm2_exm <-read.csv("Deepm2_w2/oxygen_uncertainty_post.csv")
deepm2_exm <- deepm2_exm[,-1]
deepm2_exm$DateTime <- as.Date(deepm2_exm$DateTime, format="%Y-%m-%d")
mom_deepm2 <- filter(deepm2_exm, Depth==4 | Depth==1 | Depth==8)
mom_deepm2 <- pivot_wider(mom_deepm2, names_from=Depth, names_prefix='depth_', values_from=OXY_oxy)
mom_deepm2$value <- mom_deepm2$depth_4 - ((mom_deepm2$depth_1 + mom_deepm2$depth_8)/2)
combined_mom<- merge(mom_deepm2, mom_deepm1, all=TRUE)
#MOM uncertainty plot
intervals = 1:19/20
plot1 <-ggplot(mom_pre, aes(DateTime,value))+
ggfan::geom_fan(intervals=intervals)+
scale_fill_gradient(name="Pre-calibration")+
ggnewscale::new_scale_fill()+
ggfan::geom_fan(data=combined_mom, mapping=aes(DateTime, value), intervals=intervals, alpha=0.6)+
scale_fill_gradient(name="Post-calibraion", low="red", high="pink")+
ylab("MOM")+
ylab(expression(bold(MOM~(mmol/m^{3}))))+
xlab("Date")+
ylim(c(-300, 200))+
ggtitle("")+
ggplot2::theme_light() +
theme(
plot.title = ggplot2::element_text(face= "bold", size = 10),
axis.title.y = ggplot2::element_text(face="bold",size= 12),
axis.title.x = ggplot2::element_text(face="bold", size= 12, margin = margin(t = 5, r = 0, b = 0, l = 0)),
legend.text = ggplot2::element_text(size= 10),
legend.title = ggplot2::element_text(face="bold",size= 12),
axis.text = element_text(size=12)
)
plot1
combined <- ggarrange(plot2, plot1, ncol=1, nrow=2, common.legend=TRUE)+
theme(legend.position='bottom')
combined
setwd("/Volumes/Users/Kamilla/FCR/PEST/PEST_final_runs/Github/observations")
#Observed temperature data
obs_temp<-read.csv('CleanedObsTemp.csv')
obs_temp$DateTime <- as.Date(obs_temp$DateTime, format="%Y-%m-%d")
#Filtering out days with missing data and choose modeling period
obs_temp <- subset(obs_temp, DateTime != "2019-04-29" & DateTime != "2019-05-30") %>%
filter(DateTime > "2015-07-07" & DateTime < "2020-01-01")
#Interpolation of observed temperature data over depth
estimate_temp_by_date <- function(target_date, target_depth) {
data_for_date <- obs_temp %>%
filter(DateTime == target_date) %>%
arrange(Depth)
approx(data_for_date$Depth, data_for_date$temp, xout = target_depth)$y
}
temp_interp_depth <- crossing(
tibble(DateTime = unique(obs_temp$DateTime)),
tibble(Depth = c(0.1, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 9.2))
) %>%
group_by(DateTime) %>%
mutate(temp = estimate_temp_by_date(DateTime[1], Depth))
#Creating format required by rLakeAnalyzer::ts.thermo.depth and rLakeAnalyzer::ts.schmidt.stability
temp_wtr <- pivot_wider(temp_interp_depth, names_from=Depth, names_prefix='wtr_', values_from=temp)
#write.csv(temp_wtr, obs_temp_wtr.csv)
#Calculating thermocline depth (from 1 April to 30 September)
thermo_depth_df <- temp_wtr %>%
mutate(month = lubridate::month(DateTime)) %>%
filter(between(month, 4, 9)) %>%
mutate(year = lubridate::year(DateTime)) %>%
group_by(year)
#Deleting last two columns to have the right format for rLakeAnalyzer::ts.thermo.depth
thermo_depth_df <- thermo_depth_df[, -c(13, 14)]
thermo_depth<- ts.thermo.depth(thermo_depth_df, Smin = 0.1, na.rm=TRUE, seasonal=FALSE)
#write.csv(thermo_depth, "obs_td.csv")
#Calculating Schmidt stability
bathy <- read.csv('bathymetry.csv')
schmidt_stability <- ts.schmidt.stability(temp_wtr, bathy, na.rm=TRUE)
#write.csv(obs_SS.csv)
#Interpolation of observed temp data over depth by 0.1 m using estimate_temp_by_date function
temp_interp_depth_obs <- crossing(
tibble(DateTime = unique(obs_temp$DateTime)),
tibble(Depth = seq(0.1, 9.2, by=0.1))
) %>%
group_by(DateTime) %>%
mutate(temp = estimate_temp_by_date(DateTime[1], Depth))
temp_interp_depth_obs$DateTime <- as.Date(temp_interp_depth_obs$DateTime, format="%Y-%m-%d")
#interpolation over time
estimate_temp_by_time <- function(target_depth, target_date) {
data_for_depth <- temp_interp_depth_obs %>%
filter(Depth == target_depth) %>%
arrange(DateTime)
approx(data_for_depth$DateTime, data_for_depth$temp, xout = target_date)$y
}
temp_obs_interp <- crossing(
tibble(DateTime = seq(as.Date("2016-12-02", format="%Y-%m-%d"), as.Date("2019-12-31", format="%Y-%m-%d"), by = 1)),
tibble(Depth = unique(temp_interp_depth_obs$Depth))
) %>%
group_by(Depth) %>%
mutate(temp = estimate_temp_by_time(Depth[1], DateTime))
#Save interpolated observed temperature dataset: 'obs_temp_interpolated.csv'
#write.csv(temp_obs_interp, 'obs_temp_interpolated.csv', row.names=FALSE)
#Observed oxygen data
obs_oxy<-read.csv('CleanedObsOxy.csv') %>%
filter(DateTime > "2015-07-07" & DateTime < "2020-01-01") %>%
mutate(DateTime = as.Date(DateTime, format="%Y-%m-%d"))
#MOM
epi_oxy_obs <- filter(obs_oxy, Depth==1)
hypo_oxy_obs <- filter(obs_oxy, Depth==8)
met_oxy_obs <- filter(obs_oxy, Depth==4)
obs_mom <- merge(epi_oxy_obs, hypo_oxy_obs, by="DateTime") %>%
dplyr::rename(epi_oxy = OXY_oxy.x, hypo_oxy = OXY_oxy.y)
obs_mom$exp_oxy_obs <- (obs_mom$epi_oxy+obs_mom$hypo_oxy)/2
obs_mom <- merge(obs_mom, met_oxy_obs, by="DateTime")%>%
dplyr::rename(met_oxy = OXY_oxy)
obs_mom$deviation <- obs_mom$met_oxy - obs_mom$exp_oxy_obs
#write.csv(obs_mom[, c("DateTime", "deviation")], "mom_observed.csv", row.names=FALSE)
#Interpolation of observed oxygen data over depth by 0.1 m
estimate_oxy_by_date <- function(target_date, target_depth) {
data_for_date <- obs_oxy %>%
filter(DateTime == target_date) %>%
arrange(Depth)
approx(data_for_date$Depth, data_for_date$OXY_oxy, xout = target_depth)$y
}
oxy_interp_depth_obs <- crossing(
tibble(DateTime = unique(obs_oxy$DateTime)),
tibble(Depth = seq(0.1, 9.2, by=0.1))
) %>%
group_by(DateTime) %>%
mutate(OXY_oxy = estimate_oxy_by_date(DateTime[1], Depth))
# Gettind rid of NAs
oxy_interp_depth_obs <-na.omit(oxy_interp_depth_obs)
#Interpolation of observed oxygen over time
estimate_oxy_by_depth <- function(target_depth, target_date) {
data_for_depth <- oxy_interp_depth_obs %>%
filter(Depth == target_depth) %>%
arrange(DateTime)
approx(data_for_depth$DateTime, data_for_depth$OXY_oxy, xout = target_date)$y
}
oxy_obs_interp <- crossing(
#interpolating in the calibration period
tibble(DateTime = seq(as.Date("2015-07-09", format="%Y-%m-%d"), as.Date("2019-12-06", format="%Y-%m-%d"), by = 1)),
tibble(Depth = unique(oxy_interp_depth_obs$Depth))
) %>%
group_by(Depth) %>%
mutate(OXY_oxy = estimate_oxy_by_depth(Depth[1], DateTime))
#Save interpolated observed oxy dataset: 'obs_oxy_interpolated.csv'
#write.csv(oxy_obs_interp, 'obs_oxy_interpolated.csv', row.names=FALSE)
#creating anoxia dataset: unit conversion from mmol/m3 to mg/L, selecting oxygen concentrations < 1mg/L, filer between May and November
obs_anoxia <- oxy_obs_interp %>%
mutate(OXY_oxy=OXY_oxy*32/1000) %>%
mutate(OXY_oxy=ifelse(OXY_oxy<=1, 1, 0)) %>%
na.omit() %>%
mutate(month = lubridate::month(DateTime)) %>%
filter(between(month, 5, 11))
#Creating empty dataframe for loop
uniqueDates  <- unique(obs_anoxia$DateTime)
newData_obs  <- data.frame(
DateTime = unique(obs_anoxia$DateTime),
Count = length(uniqueDates)
)
#Calculating number of anoxic layers each day
for(i in 1:length(uniqueDates)){
filteredData  <- filter(obs_anoxia, DateTime==uniqueDates[i] & OXY_oxy==1)
newData_obs$Count[i] <- nrow(filteredData)
}
View(newData_obs)
View(oxy_obs_interp)
View(obs_mom)
View(temp_obs_interp)
View(schmidt_stability)
View(thermo_depth)
setwd('/Volumes/Users/Kamilla/FCR/PEST/PEST_final_runs/Github/Calibrated_models')
sim_folder <- getwd()
#Phi during the calibration recorded in glm3.iobj file which was converted to csv file for analysis
#Routine deep mixing 2 model
error_routine <- read.csv("Deepm2_routine/glm3.csv")
error_r_1 <- subset(error_routine, select = c(1:5))
error_r <- subset(error_routine, select = -c(1:5))
melted <- melt(error_r, na.rm=TRUE)
iteration <- rep(error_r_1$iteration, times=20)
new <- cbind(iteration, melted)
new1 <- new[order(iteration),]
colnames(new1) <- c("Iteration", "Obs_group" ,"Phi")
New_obs_group <- c(rep("Temp", times=10), rep("Oxy", times=10))
New_obs_group1 <- rep(New_obs_group, max(error_r_1$iteration)+1)
final_r <- cbind(new1, New_obs_group1)
reorder <- c("Oxy", "Temp")
new_data_r <- aggregate(Phi ~  factor(New_obs_group1, levels=reorder) + Iteration, data=final_r, sum)
colnames(new_data_r) <- c("New_obs_group", "Iteration", "Phi")
r<- ggplot(new_data_r, aes(x=Iteration, y=Phi, fill=New_obs_group)) +
geom_area(size=0.1, colour="black")+
ggtitle("Deep mixing 2 routine") +
ylim(c(0, 4000))+
scale_fill_manual(
name="Legend",
values = c("Temp"="#619CFF", "Oxy"="#00BA38")
)+
ggplot2::theme_light() +
theme(plot.title = element_text(hjust = 0, size=12, face="bold"),
axis.title.y = element_text(size=10, face="bold") ,
axis.title.x = element_text(size=10, face="bold"),
legend.text = ggplot2::element_text(size= 10),
plot.subtitle=element_text(size=8),
legend.title = ggplot2::element_blank(),
legend.position = "top",
legend.direction="horizontal",
legend.key.height = unit(3, "mm"),
legend.key.size = unit(3, 'mm'),
legend.key.width=unit(3,"mm"))
r
#Weight 1, deep mixing 2 model
error_w1 <- read.csv("Deepm2_exm_weight1/glm3.csv")
error_w1_1 <- subset(error_w1, select = c(1:5))
error_w1 <- subset(error_w1, select = -c(1:5))
melted <- melt(error_w1, na.rm=TRUE)
iteration <- rep(error_w1_1$iteration, times=24)
new <- cbind(iteration, melted)
new1 <- new[order(iteration),]
colnames(new1) <- c("Iteration", "Obs_group" ,"Phi")
New_obs_group <- c(rep("Temp", times=10), rep("Oxy", times=10), "TD", "SS", "MOM", "AF")
New_obs_group1 <- rep(New_obs_group, max(error_w1_1$iteration)+1)
final_w1 <- cbind(new1, New_obs_group1)
reorder <- c("Oxy", "Temp", "AF", "MOM", "SS", "TD")
new_data_w1 <- aggregate(Phi ~  factor(New_obs_group1, levels=reorder) + Iteration, data=final_w1, sum)
colnames(new_data_w1) <- c("New_obs_group", "Iteration", "Phi")
w1<- ggplot(new_data_w1, aes(x=Iteration, y=Phi, fill=New_obs_group)) +
geom_area(size=0.1, colour="black")+
ggtitle("Deep mixing 2 w1") +
ylim(c(0, 4000))+
scale_fill_manual(
name="Legend",
values = c("Temp"="#619CFF", "Oxy"="#00BA38", "TD"="#FF61CC", "SS"="#00BFC4", "MOM"="#CD9600", "AF"="#F8766D"),
guide=guide_legend(nrow=1)
)+
ggplot2::theme_light() +
theme(plot.title = element_text(hjust = 0, size=12, face="bold"),
axis.title.y = element_text(size=10, face="bold") ,
axis.title.x = element_text(size=10, face="bold"),
legend.text = ggplot2::element_text(size= 10),
plot.subtitle=element_text(size=8),
legend.title = ggplot2::element_blank(),
legend.position = "top",
legend.direction="horizontal",
legend.key.height = unit(3, "mm"),
legend.key.size = unit(3, 'mm'),
legend.key.width=unit(3,"mm"))
w1
w1_legend <- get_legend(w1)
#Weight 2, deep mixing 2 model
error_w2 <- read.csv("Deepm2_exm_weight2/glm3.csv")
error_w2_1 <- subset(error_w2, select = c(1:5))
error_w2 <- subset(error_w2, select = -c(1:5))
melted <- melt(error_w2, na.rm=TRUE)
iteration <- rep(error_w2_1$iteration, times=24)
new <- cbind(iteration, melted)
new1 <- new[order(iteration),]
colnames(new1) <- c("Iteration", "Obs_group" ,"Phi")
New_obs_group <- c(rep("Temp", times=10), rep("Oxy", times=10), "TD", "SS", "MOM", "AF")
New_obs_group1 <- rep(New_obs_group, max(error_w2_1$iteration)+1)
final_w2 <- cbind(new1, New_obs_group1)
ggplot(final_w2, aes(x=Iteration, y=Phi, fill=Obs_group)) +
geom_area(size=0.1, colour="black")+
ggtitle("Deep mixing 2 w2")
reorder <- c("Oxy", "Temp", "AF", "MOM", "SS", "TD")
new_data_w2 <- aggregate(Phi ~  factor(New_obs_group1, levels=reorder) + Iteration, data=final_w2, sum)
colnames(new_data_w2) <- c("New_obs_group", "Iteration", "Phi")
w2<- ggplot(new_data_w2, aes(x=Iteration, y=Phi, fill=New_obs_group)) +
geom_area(size=0.1, colour="black")+
ggtitle("Deep mixing 2 w2") +
ylim(c(0, 4000))+
scale_fill_manual(
name="Legend",
values = c("Temp"="#619CFF", "Oxy"="#00BA38", "TD"="#FF61CC", "SS"="#00BFC4", "MOM"="#CD9600", "AF"="#F8766D"),
guide=guide_legend(nrow=1)
)+
ggplot2::theme_light() +
theme(plot.title = element_text(hjust = 0, size=12, face="bold"),
axis.title.y = element_text(size=10, face="bold") ,
axis.title.x = element_text(size=10, face="bold"),
legend.text = ggplot2::element_text(size= 10),
plot.subtitle=element_text(size=8),
legend.title = ggplot2::element_blank(),
legend.position = "top",
legend.direction="horizontal",
legend.key.height = unit(3, "mm"),
legend.key.size = unit(3, 'mm'),
legend.key.width=unit(3,"mm"))
w2
#w3
error_w3 <- read.csv("Deepm2_exm_weight3/glm3.csv")
error_w3_1 <- subset(error_w3, select = c(1:5))
error_w3 <- subset(error_w3, select = -c(1:5))
melted <- melt(error_w3, na.rm=TRUE)
iteration <- rep(error_w3_1$iteration, times=24)
new <- cbind(iteration, melted)
new1 <- new[order(iteration),]
colnames(new1) <- c("Iteration", "Obs_group" ,"Phi")
New_obs_group <- c(rep("Temp", times=10), rep("Oxy", times=10), "TD", "SS", "MOM", "AF")
New_obs_group1 <- rep(New_obs_group, max(error_w3_1$iteration)+1)
final_w3 <- cbind(new1, New_obs_group1)
reorder <- c("Oxy", "Temp", "AF", "MOM", "SS", "TD")
new_data_w3 <- aggregate(Phi ~  factor(New_obs_group1, levels=reorder) + Iteration, data=final_w3, sum)
colnames(new_data_w3) <- c("New_obs_group", "Iteration", "Phi")
w3<- ggplot(new_data_w3, aes(x=Iteration, y=Phi, fill=New_obs_group)) +
geom_area(size=0.1, colour="black")+
ggtitle("Deep mixing 2 w3") +
#ylim(c(0, 9000))+
scale_fill_manual(
name="Legend",
values = c("Temp"="#619CFF", "Oxy"="#00BA38", "TD"="#FF61CC", "SS"="#00BFC4", "MOM"="#CD9600", "AF"="#F8766D"),
guide=guide_legend(nrow=1)
)+
ggplot2::theme_light() +
theme(plot.title = element_text(hjust = 0, size=12, face="bold"),
axis.title.y = element_text(size=10, face="bold") ,
axis.title.x = element_text(size=10, face="bold"),
legend.text = ggplot2::element_text(size= 10),
plot.subtitle=element_text(size=8),
legend.title = ggplot2::element_blank(),
legend.position = "top",
legend.direction="horizontal",
legend.key.height = unit(3, "mm"),
legend.key.size = unit(3, 'mm'),
legend.key.width=unit(3,"mm"))
w3
stacked<- ggarrange(r, w1, w2, w3, ncol=2, nrow=2, common.legend=TRUE, legend.grob=w1_legend)
stacked
